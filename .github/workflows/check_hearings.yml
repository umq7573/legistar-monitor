name: Check for New Hearings

on:
  schedule:
    # Run every day at 8:00 AM UTC
    - cron: '0 8 * * *'
  
  # Allow manual triggering
  workflow_dispatch:

jobs:
  check-hearings:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed for pushing to gh-pages
    
    steps:
      - name: Checkout code from main branch
        uses: actions/checkout@v3
        # This checks out the code (python scripts, etc.) from the branch that triggered the workflow

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
      
      - name: Configure API token
        run: |
          # Create config.json with the token from secret
          echo '{
            "client": "nyc",
            "token": "${{ secrets.LEGISTAR_API_TOKEN }}"
          }' > config.json
      
      - name: Check for new hearings
        id: check # check_new_hearings.py reads/writes data/seen_events.json and writes data/processed_events_for_web.json
        run: python check_new_hearings.py
      
      - name: Generate web page
        run: python generate_web_page.py --title "NYC Legistar Hearing Monitor" # reads data/processed_events_for_web.json, writes docs/index.html
      
      - name: Summarize results
        run: |
          echo "==== HEARING MONITOR RESULTS ===="
          echo "Total items in 'Updates since last run': ${{ steps.check.outputs.total_updates || 0 }}"
          echo "Newly Added Events (not reschedules): ${{ steps.check.outputs.newly_added_count || 0 }}"
          echo "Newly Deferred Events (pending match): ${{ steps.check.outputs.newly_deferred_count || 0 }}"
          echo "Newly Rescheduled (Deferred matched to New): ${{ steps.check.outputs.newly_rescheduled_count || 0 }}"
      
      # The "Commit changes and push" step that committed to main has been removed.
      
      - name: Stage data files for gh-pages deployment
        run: |
          mkdir -p data # Ensure data directory exists locally for the script outputs
          mkdir -p docs/data # Ensure target directory exists within docs
          # cp data/seen_events.json docs/data/seen_events.json # DO NOT COPY seen_events.json
          # Copy processed_events_for_web.json for potential debugging on gh-pages, or remove if not needed.
          cp data/processed_events_for_web.json docs/data/processed_events_for_web.json 
        
      - name: Create .nojekyll file
        run: |
          touch docs/.nojekyll
          
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages # Target branch
          folder: docs     # Source folder from the runner (will contain index.html, .nojekyll, and docs/data/*)
          clean: true      # Clean the gh-pages branch before deploying 